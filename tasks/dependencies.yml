---
# tasks file for compile_grass

- name: 'PDAL support is not available for python3 unless we compile from source'
  set_fact:
    gcs_pdal_support: false
  when: gcs_python_version|int == 3

- name: 'Add ppa:deadsnakes/ppa repo (for newer python versions)'
  apt_repository:
    repo: 'ppa:deadsnakes/ppa'
  become: true

- name: 'Add ppa:ubuntugis/ubuntugis-unstable'
  apt_repository:
    repo: 'ppa:ubuntugis/ubuntugis-unstable'
  become: true

# This package seems not to exist any more?
# Maybe we need ffmpeg instead?
# Should we directly install the deb package?
# https://launchpad.net/ubuntu/bionic/amd64/libav-tools/7:3.3.4-2
# - 'libav-tools'
- name: 'Install prerequisites'
  apt:
    name:
      - 'build-essential'
      - 'autoconf2.13'
      - 'autotools-dev'
      - 'debhelper'
      - 'fakeroot'
      - 'flex'
      - 'make'
      - 'bison'
      - 'gcc'
      - 'libgcc1'
      - 'g++'
      - 'cmake'
      - 'ccache'
      - 'wx-common'
      - 'wx3.0-headers'
      - 'libwxgtk3.0-dev'
      - 'libwxbase3.0-dev'
      - 'libgsl-dev'
      - 'libjpeg-dev'
      - 'libpng-dev'
      - 'libpnglite-dev'
      - 'libtiff-dev'
      - 'libtiff5-dev'
      - 'libreadline-dev'
      - 'dpatch'
      - 'libatlas-base-dev'
      - 'libncurses5-dev'
      - 'zlib1g-dev'
      - 'gettext'
      - 'sqlite3'
      - 'libsqlite3-dev'
      - 'libpq-dev'
      - 'libsdl1.2-dev'
      - 'libreadline7'
      - 'libboost-thread-dev'
      - 'libboost-program-options-dev'
      - 'subversion'
      - 'wget'
      - 'libavutil-dev'
      - 'ffmpeg2theora'
      - 'libffmpegthumbnailer-dev'
      - 'libavcodec-dev'
      - 'libavformat-dev'
      - 'libswscale-dev'
      - 'checkinstall'
      - 'libglu1-mesa-dev'
      - 'libxmu-dev'
      - 'ghostscript'
  become: true

- name: 'Install BLAS development files'
  apt:
    name:
      - 'libblas-dev'
  when: gcs_blas_support| bool == true

- name: 'Install bzip2 development files'
  apt:
    name:
      - 'libbz2-dev'
  when: gcs_bzip2_support| bool == true

- name: 'Install cairo development files'
  apt:
    name:
      - 'libcairo2-dev'
  when: gcs_cairo_support| bool == true

- name: 'Install fftw3 development files'
  apt:
    name:
      - 'libfftw3-dev'
  when: gcs_fftw_support| bool == true

- name: 'Install freetype development files'
  apt:
    name:
      - 'libfreetype6-dev'
  when: gcs_freetype_support| bool == true

- name: 'Install the pre-compiled dev-packages for GDAL'
  apt:
    name:
      - 'libgdal-dev'
      - 'gdal-bin'
  become: true
  when: (gcs_gdal_support| bool == true) and (gcs_precompiled_gdal|bool == true)

- name: 'Install the pre-compiled dev-packages for GEOS'
  apt:
    name:
      - 'libgeos-dev'
  become: true
  when: (gcs_geos_support| bool == true) and (gcs_precompiled_geos|bool == true)

- name: 'Install lapack development files'
  apt:
    name:
      - 'liblapack-dev'
  become: true
  when: gcs_lapack_support|bool == true

- name: 'Install liblas development files'
  apt:
    name:
      - 'liblas-c-dev'
  become: true
  when: gcs_liblas_support|bool == true

- name: 'Install MySQL development files'
  apt:
    name:
      - 'libmysqlclient-dev'
  when: gcs_mysql_support|bool == true

- name: 'Install netcdf development files'
  apt:
    name:
      - 'libnetcdf-dev'
      - 'netcdf-bin'
  become: true
  when: gcs_netcdf_support|bool == true

- name: 'Install odbc development files'
  apt:
    name:
      - 'unixodbc-dev'
  become: true
  when: gcs_odbc_support|bool == true

- name: 'Install OpenCL development files'
  apt:
    name:
      - 'opencl-headers'
      - 'ocl-icd-libopencl1'
  when: gcs_opencl_support| bool == true

- name: 'Install the pre-compiled dev packages for PDAL'
  apt:
    name:
      - 'libpdal-dev'
      - 'pdal'
  become: true
  when: gcs_precompiled_pdal|bool == true

- name: 'Install the pre-compiled dev-packages for PROJ.4'
  apt:
    name:
      - 'proj-bin'
      - 'proj-data'
      - 'libproj-dev'
  become: true
  when: gcs_precompiled_proj|bool == true

- name: 'Install zstd development files'
  apt:
    name:
      - 'libzstd-dev'
  when: gcs_zstd_support| bool == true

- name: 'Install python 2 dependencies'
  apt:
    name:
      - 'python'
      - 'python-dev'
      - 'virtualenv'
      # - 'python-wxversion'
      # - 'python-wxtools'
      # - 'python-wxgtk3.0'
      # - 'libpdal-plugin-python'
  when: gcs_python_version|int == 2
  become: true

- name: 'Install python 3 dependencies'
  apt:
    name:
      - 'python3'
      - 'python3-dev'
      - 'python3-venv'
      - 'virtualenv'
  when: gcs_python_version|int == 3
  become: true

- name: 'Check out GRASS source code'
  subversion:
    repo: '{{ gcs_svn_branch_url }}'
    dest: '{{ gcs_source_dir }}/grass/'
  become_user: '{{ gcs_builder_username }}'
  become: true

- name: 'Copy requirements.txt inside the repo.'
  template:
    src: 'requirements.txt.j2'
    dest: '{{ gcs_source_dir }}/grass/requirements.txt'
    owner: '{{ gcs_builder_username }}'
    group: '{{ gcs_builder_username }}'
    mode: '0644'
  become_user: '{{ gcs_builder_username }}'
  become: true

- name: 'Create virtualenv and install python dependencies'
  pip:
    requirements: '{{ gcs_source_dir }}/grass/requirements.txt'
    virtualenv: '{{ gcs_source_dir }}/grass/venv'
    virtualenv_python: '/usr/bin/python{{ gcs_python_version }}'
    virtualenv_site_packages: false
  become_user: '{{ gcs_builder_username }}'
  become: true

# - name: 'Install pdal'
#   pip:
#     name: pdal
#     virtualenv: '{{ gcs_source_dir }}/venv'
#     virtualenv_python: '/usr/bin/python{{ gcs_python_version }}'
#     virtualenv_site_packages: false
#   when: gcs_precompiled_pdal|bool == true
#   become_user: '{{ gcs_builder_username }}'
#   become: true
